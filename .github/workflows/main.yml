name: Build Multiple PKGBUILDs

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - uses: actions/checkout@v3

      - name: Compile
        run: |
          # Enable multilib and update the system with necessary packages
          echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          pacman -Syu --noconfirm base-devel sudo gnupg

          # Create non-root user with sudo privileges
          useradd user -G wheel && echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

          # Change ownership of the current directory to the user
          chown user -R .

          # Use all cores for makepkg
          export MAKEFLAGS="-j$(nproc)"

          # Run makepkg as non-root user for all PKGBUILDs with signature check skipped
          su user -c "find . -name 'PKGBUILD' -execdir makepkg -s --noconfirm --skippgpcheck \;"

      - name: Find all built packages
        id: find_packages
        run: |
          # Find all .pkg.tar.zst files and collect the package paths
          packages=$(find . -name '*.pkg.tar.zst')
          # Loop through each found package
          for pkg in $packages; do
            # Extract the folder name (the directory of the package)
            folder_name=$(dirname "$pkg")
            # Add the folder name to the list of packages to upload
            echo "$folder_name" >> $GITHUB_ENV
          done

      - name: Upload built packages individually
        run: |
          # Loop through all found packages based on folder names
          for folder_name in $(echo ${{ env.packages }}); do
            # Use the folder name as the artifact name
            artifact_name=$(basename "$folder_name")
            echo "Uploading $artifact_name..."
  
            # Create a folder for the package and copy the package into it
            mkdir -p $HOME/$artifact_name
            cp "$folder_name/*.pkg.tar.zst" $HOME/$artifact_name/
  
            # Upload each package as a separate artifact
            - name: Upload $artifact_name
              uses: actions/upload-artifact@v3
              with:
                name: "$artifact_name"
                path: "$HOME/$artifact_name/*"

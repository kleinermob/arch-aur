name: Generate Dynamic Build Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-dynamic-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect directories with PKGBUILDs
        run: |
          # Find all directories that contain PKGBUILD files
          packages=$(find . -type f -name 'PKGBUILD' -exec dirname {} \; | sed 's/^\.\///')
          
          # Generate matrix packages array
          matrix_packages=$(echo "$packages" | sed 's/\n/","/g' | sed 's/^/["/' | sed 's/$/"]/')

          # Save to a temporary file
          echo "matrix_packages=$matrix_packages" > $GITHUB_ENV

      - name: Create dynamic build workflow
        run: |
          # Dynamically generate dynamic-build.yml using the detected package names
          cat > .github/workflows/dynamic-build.yml <<EOF
name: Build and Upload Packages

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ env.matrix_packages }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Arch Linux container
        uses: docker://archlinux:latest

      - name: Install dependencies for Arch Linux build
        run: |
          pacman -Sy --noconfirm base-devel sudo git
          sudo useradd user -G wheel && echo "user ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers

      - name: Compile PKGBUILD inside Arch container
        run: |
          su user -c "cd /workspace/\${{ matrix.package }} && yes | PKGDEST=/tmp/\${{ matrix.package }} makepkg --noconfirm --skippgpcheck -s"

      - name: List contents of /tmp/${{ matrix.package }}
        run: |
          ls -lh /tmp/${{ matrix.package }}

      - name: Zip the package
        run: |
          folder_name="${{ matrix.package }}"
          zip -r "/tmp/\${folder_name}.zip" "/tmp/\${folder_name}"/*.pkg.tar.zst

      - name: Upload the zip file as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: \${{ matrix.package }}-package
          path: "/tmp/\${{ matrix.package }}.zip"
EOF

      - name: Display the dynamic build workflow
        run: cat .github/workflows/dynamic-build.yml

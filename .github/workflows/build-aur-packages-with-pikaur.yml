name: Build AUR Package Pikaur

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'The name of the AUR package to build'
        required: true
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - name: Validate PACKAGE_NAME input
        id: validate
        run: |
          if [ -z "${{ github.event.inputs.package_name }}" ]; then
            echo "Error: PACKAGE_NAME input is required."
            exit 1
          fi

      - name: Enable Multilib and Update System
        run: |
          echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          pacman -Syu --noconfirm base-devel sudo git gnupg

      - name: Create Non-Root User
        run: |
          useradd -m -s /bin/bash user
          echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown -R user:user /home/user

      - name: Clone and Build Pikaur from AUR (as non-root user)
        run: |
          # Clone pikaur from AUR as non-root user
          git clone https://aur.archlinux.org/pikaur.git
          chown -R user:user .
          cd pikaur
          # Build pikaur using makepkg as non-root user
          su user -c "MAKEFLAGS=\"-j$(nproc)\" makepkg -si --noconfirm --skippgpcheck"

      - name: Clone AUR Package (as non-root user)
        run: |
          # Clone the requested package from AUR as non-root user
          git clone \"https://aur.archlinux.org/${{ github.event.inputs.package_name }}.git\"
          cd "${{ github.event.inputs.package_name }}"

      - name: Build Package Using Pikaur (as non-root user)
        working-directory: ${{ github.event.inputs.package_name }}
        run: |
          # Build the AUR package using pikaur as non-root user
          su user -c "MAKEFLAGS=\"-j$(nproc)\" pikaur -S --noconfirm --skippgpcheck ${{ github.event.inputs.package_name }}"

      - name: Upload Built Package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.package_name }}
          path: |
            ${{ github.event.inputs.package_name }}/*.pkg.tar.zst
          if-no-files-found: warn
